plugins {
    id 'java-library'
    id("io.freefair.lombok") version "8.13.1"
    id("io.qameta.allure") version "2.12.0"
}

group = 'mail.alina'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

def aspectjWeaverVersion = "1.9.22",
    selenideVersion = "6.19.1",
    restAssuredVersion = "5.5.1",
    allureVersion = "2.29.0",
    junitVersion = "5.10.0",
    slf4jVersion = "2.0.9",
    ownerVersion = "1.0.12"

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

dependencies {
    testImplementation(
            "com.codeborne:selenide:$selenideVersion",
            "io.qameta.allure:allure-selenide:$allureVersion",
            "io.qameta.allure:allure-rest-assured:$allureVersion",
            "io.rest-assured:rest-assured:$restAssuredVersion",
            "io.rest-assured:json-schema-validator:$restAssuredVersion",
            "org.junit.jupiter:junit-jupiter:$junitVersion",
            "org.slf4j:slf4j-simple:$slf4jVersion",
            "org.slf4j:slf4j-api:$slf4jVersion",
            "org.assertj:assertj-core:3.25.3",
            "org.aeonbits.owner:owner:$ownerVersion",
            "io.appium:java-client:8.3.0",
            "commons-io:commons-io:2.11.0",
            "org.aspectj:aspectjweaver:$aspectjWeaverVersion"
    )
}

tasks.withType(Test) {
    useJUnitPlatform()
    systemProperties(System.getProperties())

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}
tasks.register('web', Test) {
    useJUnitPlatform {
        includeTags("web")
    }
}
